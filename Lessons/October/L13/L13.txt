AP COMP SCI A 1 OF 2
8
Lesson-13
Rick Platek
â€¢
Oct 28

===========================================================================
Task #1: Histogram.java
===========================================================================
public class Histogram{



    public static void main(String [] args){
	int n = Integer.parseInt(args[0]);

	int [] a = new int[n];

	// initialize array with random integers from [0,100].
	for (int i = 0; i < n; i++){
	    a[i] = (int)(Math.random() * 101);

	}
	// print arrays using a for-each loop
	for (int x : a)
	    System.out.print(x + " ");
	System.out.println();

	// print a histogram
	// Build a frequency table
	int [] freq = new int[11];
	for (int i = 0; i < a.length; i++)
	    freq[a[i]/10]++;


         //  a -> {35, 23, 55, 44, 100 ,49}
	 //  freq[35/10] =  freq[3]
	 //  freq[23/10] =  freq[2]
	 //  freq[55/10] =  freq[5]
	 //  freq[44/10] =  freq[4]
	 //  freq[100/10] = freq[10]
	 //  freq[49/10] =  freq[4]
	 //           0   1   2   3   4   5   6   7   8   9  10
	 // freq -> { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0}




	for (int i = 0 ;  i <  freq.length; i++){
	    System.out.printf("%3d: ",10*i);
	    for (int j = 0; j < freq[i]; j++) System.out.print("*");
	    System.out.println();
	}


    }
}


===========================================================================
Task #2: Multidimensional arrays.
===========================================================================

--- In Java, the elements of an array can be of any type. In particular,
    the elements of an array can themselves be arrays. Arrays of arrays
    are called multidimensional arrays. The most common form of multi-
    dimensional array is the two-dimensional array, which is most often
    used to represent data in which the individual entries form a
    rectangular structures marked off into rows and columns. This type
    of two-dimensional structure is often called a matrix. Arrays of three
    or more dimensions are also legal in Java but occur less frequently.


-- Example of a 3x3 tic-tac toe board.

    String [][] board = new String[3][3];

    Given this declaration, you could then refer the the Strings in the
    individual squares by supplying two separate indices, one specifying
    the row number and another specifying the column numbers.


        board[0][0] |  board[0][1] |  board[0][2]
	-------------------------------------------
	board[1][0] |  board[1][1] |  board[1][2]
        -------------------------------------------
	board[2][0] |  board[2][1] |  board[2][2]



     The statement

      board[1][1] = "x";

---  Diagram of the two dimensional array in memory.

                               0     1       2
       board ->  0 |  | -> | null | null | null |
                 1 |  | -> | null | "x"  | null |
		 2 |  | -> | null | null | null |

---  What does board[1] refer to?


---  Row-Major Order

        - The process of going through all the elements
	  of each row before proceeding to the next one.

     ex. Code to print in row - major order.

       for (int i = 0 ; i < board.length; i++){
           for (int j = 0; j < board[i].length; j++){
               System.out.print(board[i][j] + " ");
           }
           System.out.println();
       }


=============================================================================
Task #3: Initialize lists.
=============================================================================
--- You can use static initialization with multidimensional arrays just as
    with single-dimensional arrays.

        ex. final int[] DIGITS = {0,1,2,3,4,5,6,7,8,9};

    To emphasize the overall structure, the values used to initialize each
    internal array are usually enclosed in an additional set of curly
    braces.

        ex.
	     public static final int[][] IDENTITY =  { { 1,  0, 0},
                                    	 	       { 0 , 1, 0},
                                    		       { 0,  0, 1}};

    Declares a 3 x 3 matrix of integes and initializes it to contain
    the following values:

                    1 | 0 | 0
		   -----------
		    0 | 1 | 0
		   -----------
                    0 | 0 | 1

     This particular matirx comes up frequently in mathematical applications
     and is called the identiy matrix.






Question #1: Transpose

     Given the square two-dimensional array,

        int [][] a = { { 1, 2, 3, 4},
	               { 5, 6, 7, 8},
		       { 9, 10, 11, 12},
		       {13, 14, 15, 16}};


     (a). Write code to print the transposition (rows and columns
          exchanged) of a a square two-dimensional array. For example
	  the transpose of a[][] should print:

                  1   5   9  13
		  2   6  10  14
		  3   7  11  15
		  4   8  12  16

     (b) Write a code fragment to transpose a square two-dimensional
         array in place without creating a second array.

   Here's a sample run.

   $ java Transpose
   a[][] printed inf row-major order:
    1    2    3    4
    5    6    7    8
    9   10   11   12
   13   14   15   16

   print transpose of a[][]:
    1    5    9   13
    2    6   10   14
    3    7   11   15
    4    8   12   16

    a[][] printed in row-major order:
    1    2    3    4
    5    6    7    8
    9   10   11   12
   13   14   15   16

   a[][] after transpose in place:
    1    5    9   13
    2    6   10   14
    3    7   11   15
    4    8   12   16


Question # 2 : SpreadSheets


  Given The following code initializes the 11-by-4 array a[][]:

    double[][] a = {
        { 99.0, 85.0, 98.0, 0.0 },
        { 98.0, 57.0, 79.0, 0.0 },
        { 92.0, 77.0, 74.0, 0.0 },
        { 94.0, 62.0, 81.0, 0.0 },
        { 99.0, 94.0, 92.0, 0.0 },
        { 80.0, 76.5, 67.0, 0.0 },
        { 76.0, 58.5, 90.5, 0.0 },
        { 92.0, 66.0, 91.0, 0.0 },
        { 97.0, 70.5, 66.5, 0.0 },
        { 89.0, 89.5, 81.0, 0.0 },
        {  0.0,  0.0,  0.0, 0.0 }
    };

   Each row i, exclude the last row,  of a[][] represents the test scores of
   student i.

   Each column j, exclude the last column, represents the scores of test j.

 (a). Write a program SpreadSheet.java that computes the test average
      of each student and records the result in the last column of a[][].



 (b). Modify SpreadSheet.java to record the column averages.

 (c). Modify the spreadsheet code to compute a weighted average of
      the rows, where the weights of each exam score are in a one-dimensional
      array weights[]. For example, to assign the last of the three
      exams in our example tto be twice the weight of the first two,
      you would use

           double [] weights = { 0.25, 0.25, 0.50};

      Note the weights should sum to 1.
Class comments

Lesson-13
