AP COMP SCI A 1 OF 2
8
lesson-03
Rick Platek
â€¢
Sep 24



****************************************************************************
*****************************************************************************

Task # 1:  Review the following notes and answer the questions 1 - 3 listed
           below.

****************************************************************************
****************************************************************************
============================================================================
Types of Errors:
============================================================================
        Review there are 3 steps of the development cycle.
               1. Create the source code with a text editor.
               2. Compile the sourcode with the Java compiler (javac).
               3. Execute the java byte code via the JVM (java).

 A compiler error occurs during the compilation phase. The compilation
 program sends error messages to the standard output and terminates abruptly.
 The file containing the java byte code is not produced.

A runtime error is thrown by the JVM during the interpretation of the
java byte code. An error messages is generally sent to standard output.

A semantic error occurs when the output of your program in not what
you intended.


============================================================================
    On the booksite complete Web exercises #2 - #5.
============================================================================
        2. a. Compiler Error : Identifier Expected
           b. Compiler Error: Illegal start of type (followed by more).
           c. Compiler Error: Identifier expected.
           d. Compiler Error: Cannot find symbol.
           e. Compiler Error: Cannot find symbol
              or              Identifier expected

        3. a. Compiler Error: Expected ;
           b. Compiler Error: a sequence of errors.
           c. Compiler Error: unclosed string literal
           d. Compiler Error: Expected {
           e. Compiler Error: Expected ;
           f. Compiler Error: Reached end of file while parsing
           g. Compiler Error: Reached end of file while parsing

         4. a. Runtime Error: missing main method
            b. Compiler Error: cannot find symbol
            c. Neither compiler or runtime. Maybe a semantic error.
            d. Compiler error: package Sstem does not exist.
            e. Compiler Error: cannot find symbol.

          5. Solution given.

Exercise: Describe what happpens if you try to execute UseArgument with
          each of the following command lines:

          a. java UseArgument
              - Runtime error : ArrayIndexOutOfBounds
          b. java UseArgument java
              - works
          c. java UseArgument @!
              - works
          d. java UseArgument @!&^%
              - bash error:
          e. java UseArgument 1234
              - works
          f. java UseArgument.java Bob
              - error: class found on application class path: UseArgument
          g. java UseArgument Alice Bob
              - works

============================================================================
Comments: - Ignored by the compiler.
          - Meant to be read by programmers.
          - The Java comment // comments out the rest of a line
          - /*
            */  is used to comment multiple lines
          -  String /* This delimited comment extends over part of a line */ a = "hi";
============================================================================

Question #1: If this source code is contained in a file called SmallProg.java,
             what command should be used to compile it using the JDK?

             public class SmallProg{
                    public static void main(String [] args){
                           System.out.println("Good luck");
                    }
              }


            Select the one right answer.
            (a). java SmallProg
            (b). javac SmallProg
            (c). java SamllProg.java
            (d). javac SmallProg.java
            (e). java SmallProg main








Question #2: What command should be used to run the program from the last question, using
             the JDK?

             Select the one right answer.
             (a). java SmallProg
             (b). javac SmallProg
             (c). java SmallProg.java
             (d). java SmallProg.class
             (e). java SmallProg.main()

Question #3: Is this a complete and legal comment?

            /* // */
            Select the one right answer.
            (a). No, the block comment (/* ... */ is not ended since the single-line
                 comment (// ...) comments out the closing part.
            (b). Its is a completely valid comment. The // part is ignored by the compiler.
            (c). The combination of comments is illegal and the compiler will reject it.







****************************************************************************
*****************************************************************************

Task # 2:  Review the following notes and answer the question 4 listed
           below.

****************************************************************************
****************************************************************************
===============================================================================
   Data Types
===============================================================================

Def: A data type is a set of values and a set of operations defined on
     those values.


The String data type.

    A String is a sequence of characters enclosed in double quotes.



    Examples of String literals (source-code representation of a data value).

       ""              -> The empty string.
       "hello"

   A common operation : +   (concatenation)
      String + String -> String
       "meat" + "ball" -> "meatball"


Question # 4: What is the value of each of the following expressions:

        a.   "" + "hi"             ->  "hi"
        b.   "23"   + "1"          ->  "231"
        c.   "meat " + " ball"     ->   "meat  ball"
        d.   "23"   + 1            ->    "23" + "1" -> "231"
        e.   23 + 1                ->    24
        f.   cat + fat             ->   Compiler error
        g.   23  + "1"             ->   "23" + "1" -> "231"

****************************************************************************
*****************************************************************************

Task # 3:  Review the following notes and answer the question 5 listed
           below.

****************************************************************************
****************************************************************************
=========================================================================
Variables
=========================================================================
 -- Variables are named locations in memory capable of holding
    a particular data type. Variable declarations associate a name with a
    data type.

                 ex. String a;  // The variable a is restricted to referring
                                // to only String data types. Currently
                                // a is unassigned.

 -- In Java, you must declare a variable before you use it.

 -- General Syntax For Any Variable Declaration and Assignment Statement.

                type name = value;

       ex.      String x = "hello";  // The variable x refers to the String
                                     // literal "hello"

       ** = is the assignment operator, it is read as gets
          so x gets the "hello"

  -- The name and type of the variable is fixed through out your program.

  -- The value can change. (dynamic).

       ex.      String a = "hi";  // The variable named a refers to the
                                  // String literal "hi". a gets "hi"
                a = "bye";        // a refers to the String literal "bye", a gets "bye"


Question #5: Is this a legal Java Statement?

            String x = 5;
****************************************************************************
*****************************************************************************

Task # 4:  Review the following notes and answer the question 6 listed
           below.

****************************************************************************
****************************************************************************


Naming Conventions:
========================================================================================
      -- Variable names are known as identifiers.

      1. The name must start with a letter or the underscore character.
      2. All other characters in the name must be letters, digits, or the
         underscore. No spaces or special characters.
      3. The name cannot be a reserved word.


 -- Names are case sensitive and most compilers only recognize the first 31
    charactes in the name.

 -- names of variables and methods begin with a lowercase letter.
    ex. limit, raiseToPower

 -- names of classes begin with an uppercase letter.
      ex. Initials, UseArgument

 -- constant values are written entirely in uppercase using an
    underscore to separate each word.

      ex.  PI, HALF_DOLLAR


Question #6: Which of the following is not a legal identifier?

             Select all valid answers.
             (a). a2z
             (b). odipus
             (c). 52pickup
             (d). _class
             (e). ca$h


****************************************************************************
*****************************************************************************
****************************************************************************
*****************************************************************************

Task # 5:  Review the following notes and answer question 7 listed
           below.

****************************************************************************
****************************************************************************

Types of Variables
==================
  - Variables defined within the body of a method are called local variables.
  - Variables defined outside the body of a method and in a class are
    call fields.
  - A parameter is a special kind of variable: it is declared in the parameter list
    of a method  and is given a value when the method is called. The parameter can be
    used only in that method.




Question #7: Consider the following program:

              public class A{

                    static String  x = "hello";

                     public static void main(String [] args){
                            String y = args[0] + " " +  args[1];
                            System.out.println(x);
                            System.out.println(y);
                     }

              }

           a. Identify the variable(s).
           b. Identify the field(s).
           c. Identify the parameter(s).
           d. Identify the local variable(s).
Variable Scope:
=============================================================================
  --  Variable scope refers to the portion of the code where the variable
      can be used.

  -- The scope of a variable begins on the line where the variable is
     declared and extends to the ending block indicated by }.

  -- The scope of a parameter is the entire method body.

Good Programming Pratice:
=============================================================================
  -- Minimize the scope of your variables to make your code easier to
     read and maintain.

  -- Generally, declare a variable when you need it.

      Bad Practice:

             int x, y , z;

             x = 1;
             y = 2;
             z = 3;

      Better Practice:

            int x = 1;
            int y = 2;
            int z = 3;


****************************************************************************
****************************************************************************

Task # 6:  From the book site : 1.2 Bult-in Types of Data

           https://introcs.cs.princeton.edu/java/12types/

****************************************************************************
****************************************************************************
1. Review the Ruler Program - prints the relative lengths of the subdivisions
                              on a ruler.

2. Try   Creative Exercise :  #35. Dragon Curves. The solution is posted on the
   book site.

3. Web Exercise: (Homework) : #10. Fibonacci Word:







:
Class comments

lesson-03
